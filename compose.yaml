version: '3.8'

services:
  # Frontend UI Service
  ui:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - api
    networks:
      - finnotate-network
    restart: unless-stopped

  # Backend API Service
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - finnotate-network
    restart: unless-stopped
    # Uncomment if you need a database
    # depends_on:
    #   - database

  # Optional: Database service (uncomment if needed)
  # database:
  #   image: postgres:15-alpine
  #   environment:
  #     POSTGRES_DB: finnotate
  #     POSTGRES_USER: finnotate
  #     POSTGRES_PASSWORD: password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - finnotate-network
  #   restart: unless-stopped

  seaweedfs:
      image: chrislusf/seaweedfs
      ports:
        - "8333:8333"  # S3 API
        - "9333:9333"  # Master
        - "8080:8080"  # Volume server
        - "8888:8888"  # Filer
      command: server -s3
      volumes:
        - seaweedfs_data:/data
      environment:
        - AWS_ACCESS_KEY_ID=admin
        - AWS_SECRET_ACCESS_KEY=spongebob

volumes:
  seaweedfs_data:

networks:
  finnotate-network:
    driver: bridge

# Uncomment if using database
# volumes:
#   postgres_data: